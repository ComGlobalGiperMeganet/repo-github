#1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def division_func (num, den):

    try:
       return round(int(num) / int(den), 2)
    except ZeroDivisionError:
        print("Попытка выполнить деление на 0 - введите корректный знаменатель")
    except ValueError:
        print("Используйте числа в качестве аргументов для корректной работы функции")

print(division_func(input("Введите числитель: "), input("Введите знаменатель: ")))

#-----------------------------------------------------------------------------------------------------------------------
#2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.

#Без проверки вводимых данных, простое объединение и вывод в одну строку
def func_inf_about_a_pers (lastname, firstname, email, date_of_birth, tel_num):
    return f"Ваше Имя: {firstname}, Фамилия: {lastname}, год рождения: {date_of_birth}, электронная почта: {email}, \
номер телефона: {tel_num}"

print(func_inf_about_a_pers(firstname = input("Введите Ваше имя:"),  lastname = input("Введите Вашу фамилию:"),\
                            email = input("Введите адресс электронной почты:"), \
                            tel_num = input("Введите номер телефона в формате 10 цифр:"), \
                            date_of_birth = input("Введите дату рождения в формате dd.mm.yyyy:")))


#Вариант без аргументов с проверкой в теле функции:
def func_inf_about_a_pers2 ():
    try:
        while True:
            firstname = input("Введите Ваше имя:")
            if False if firstname.isalpha() else True:
                print("Ошибка ввода, должны быть только буквы:")
                continue
            else:
                while True:
                    lastname = input("Введите Вашу фамилию:")
                    if False if lastname.isalpha() else True:
                        print("Ошибка ввода, должны быть только буквы:")
                        continue
                    else:
                        while True:
                            date_of_birth = input("Введите дату рождения в формате dd.mm.yyyy:")
                            if False if int(date_of_birth[0:2]) <= 31 and int(date_of_birth[3:5]) <= 12\
                                        and int(date_of_birth[3:5]) > 0 and int(date_of_birth[6:10]) > 1900\
                                        and date_of_birth.count(".") == 2 else True:
                                print("Ошибка ввода, введите дату рождения в формате dd.mm.yyyy:")
                                continue
                            else:
                                while True:
                                    email = input("Введите адресс электронной почты:")
                                    if False if email.count("@") == 1 and email.count(".") >= 1 else True:
                                        print("Ввод не соответствует адресу электронной почты, попробуйте еще раз:")
                                        continue
                                    else:
                                        while True:
                                            tel_num = input("Введите номер телефона в формате 10 цифр:")
                                            if False if len(tel_num) == 10 and tel_num.isdigit() else True:
                                                print("Ошибка ввода, введите номер в формате 10 цифр без восьмерки:")
                                                continue
                                            else:
                                                return f"Ваше Имя: {firstname}, Фамилия: {lastname}, год рождения:\
{date_of_birth}, электронная почта: {email}, номер телефона: {tel_num}"
    except ValueError:
        print("Ошибка ввода")

print(func_inf_about_a_pers2())

#-----------------------------------------------------------------------------------------------------------------------
#3 Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

def func_sum_two_lagest_val (val1, val2, val3):
    return ((val1 + val2 + val3) - min(val1, val2, val3))

print(func_sum_two_lagest_val(2, 1, 3))

#-----------------------------------------------------------------------------------------------------------------------
#4 Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
#Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

#Вариант с **:
def pow_func ():
    while True:
        x = input("Введите целое положительное число число:")
        if x.isdigit():
            while True:
                y = input("Введите отрицательное число, в степень которого хотите возвести:")
                if y[0:1] == "-" and y.lstrip("-").isdigit():
                   return int(x)**int(y)
                else:
                    print("Ошибка ввода - повторите попытку")
                    continue
        else:
            print("Ошибка ввода - повторите попытку")
            continue

print(pow_func())


#Вариант без **:--------------------------------------------------------------------------------------------------------
def pow_func2 ():
    while True:
        x = input("Введите целое положительное число число:")
        if False if x.isdigit() else True:
            print("Ошибка ввода - повторите попытку")
            continue
        else:
            while True:
                y = input("Введите отрицательное число, в степень которого хотите возвести:")
                if False if y[0:1] == "-" and y.lstrip("-").isdigit() else True:
                    print("Ошибка ввода - повторите попытку")
                    continue
                else:
                    p = 1
                    for i in range(abs(int(y))):
                        p *= int(x)
                    return 1/p

print(pow_func2())


#-----------------------------------------------------------------------------------------------------------------------
#5 Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
# разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def sum_of_numbers ():
    text = "Введите числа через пробел для суммирования, для завершения введите слово stop:"
    sum1 = 0
    while True:
        try:
            nums = input(text)
            if nums == "stop":
                break
            else:
                if False if nums.lstrip(" ").isdigit else True:

                    """
                    проверка ввода на цифры
                    при этом используется обратная конструкция тернарного оператора,
                    выдающая False при выполнении всех условий, а не True, так как 
                    в данной части блока удобнее осуществить возврат к началу цикла
                    """

                    text = "Вы ввели некорректные значения - повторите ввод, либо остановите выполнение введя команду stop\n"\
                           f"Текущая сумма: {sum1:.2f}:"
                    continue
                else:
                    for i, e in enumerate(nums.split()):
                        if e != "stop":
                            sum1 += int(e)
                            text = f"Для завершения введите stop, либо продолжайте ввод, сумма: {sum1:.2f}:"
                            continue
                        else:
                            break
                if e == "stop":
                    break
                else:
                    continue
        except ValueError:
            text = "Ошибка ввода - повторите попытку, либо остановите выполнение введя команду stop\n" \
                   f"Текущая сумма: {sum1:.2f}:"
            continue

    return f"Итоговая сумма: {sum1:.2f}"

print(sum_of_numbers())

#-----------------------------------------------------------------------------------------------------------------------
#6 Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
#Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово
# должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().

# часть 1 - слово:
def int_func ():
    text = "Введите слово маленькими латинскими буквами, для завершения введите Q:"
    word = ""

    while word != "Q":
        try:
            word = input(text)
            ind = 0
            for i in word:
                if ord(i) not in range(97, 122):
                    ind += 0
                else:
                    ind += 1
            if ind != len(word):
                text = "Введенные буквы должны быть маленькими латинскими - повторите, для завершения введите Q:"
                continue
            else:
                print(word.title())
                text = "Введите слово маленькими латинскими буквами, для завершения введите Q:"
                continue
        except ValueError:
            text = "Ошибка ввода, слово должно состоять из маленьких латинских букв, повторите, для завершения введите Q:"
            continue

print(int_func())

# часть 2 - усложненная - слово из латинских букв любого регистра -
# возврат функцией слова в состоянии ввода с переводом первой буквы в верхний регистр:----------------------------------

def int_func2 ():
    text = "Введите слово латинскими буквами, для завершения введите Q:"
    word = ""

    while word != "Q":
        try:
            word = input(text)
            ind = 0
            for i in word:
                if ord(i) not in range(65, 90) and ord(i) not in range(97, 122):
                    ind += 0
                else:
                    ind += 1
            if ind != len(word):
                text = "Введенные буквы должны быть латинскими - повторите, для завершения введите Q:"
                continue
            else:
                print(word[0].upper()+word[1:])
                text = "Введите слово латинскими буквами, для завершения введите Q:"
                continue
        except ValueError:
            text = "Ошибка ввода, слово должно состоять из латинских букв, повторите, для завершения введите Q:"
            continue

print(int_func2())

#часть 3 - доработанная часть 2 - для слов разделенных пробелом:-------------------------------------------------------
def int_func3 ():
    text = "Введите строку из слов латинскими буквами разделенных пробелом, для завершения введите Q:"
    word = ""

    while word != "Q":
        try:
            word = input(text)
            list1 = []
            for ind, el in enumerate(word.split()):
                count = 0
                for i in el:
                    if ord(i) not in range(65, 90) and ord(i) not in range(97, 122):
                        count += 0
                    else:
                        count += 1
                        continue
                if count != len(el):
                    continue
                else:
                    list1.append(el[0].upper()+el[1:])
                    continue
            for el1 in list1:
                print(el1, end=' ')
                text = "\n Введите следующую строку, либо завершите выполнение введя Q:"
                continue
        except ValueError:
            text = "Ошибка ввода, слово должно состоять из латинских букв, повторите, для завершения введите Q:"
            continue

print(int_func3())